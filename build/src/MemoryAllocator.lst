GAS LISTING /tmp/cc35zFKg.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator11getInstanceEv
   9              	_ZN15MemoryAllocator11getInstanceEv:
  10              	.LFB0:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 1/3/24.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** #include "../test/printing.hpp"
   7:src/MemoryAllocator.cpp **** 
   8:src/MemoryAllocator.cpp **** //MemoryAllocator *MemoryAllocator::instancePtr = nullptr;
   9:src/MemoryAllocator.cpp **** FragmentHeader *MemoryAllocator::freeMemHead = nullptr;
  10:src/MemoryAllocator.cpp **** FragmentHeader *MemoryAllocator::allocatedMemHead = nullptr;
  11:src/MemoryAllocator.cpp **** //size_t MemoryAllocator::NUMBER_OF_BLOCKS =
  12:src/MemoryAllocator.cpp **** //size_t MemoryAllocator::NUMBER_OF_BLOCKS = 500;
  13:src/MemoryAllocator.cpp **** 
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp **** 
  16:src/MemoryAllocator.cpp **** void MemoryAllocator::getInstance() {
  12              		.loc 1 16 37
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  17:src/MemoryAllocator.cpp ****     MemoryAllocator::freeMemHead = (FragmentHeader *) ((char *) HEAP_START_ADDR);
  20              		.loc 1 17 5
  21              		.loc 1 17 34 is_stmt 0
  22 000c 97060000 		la	a3,HEAP_START_ADDR
  22      83B60600 
  23 0014 83B70600 		ld	a5,0(a3)
  24 0018 17070000 		lla	a4,.LANCHOR0
  24      13070700 
  25 0020 2330F700 		sd	a5,0(a4)
  18:src/MemoryAllocator.cpp ****     freeMemHead->next = nullptr;
  26              		.loc 1 18 5 is_stmt 1
  27              		.loc 1 18 23 is_stmt 0
  28 0024 23B00700 		sd	zero,0(a5)
  19:src/MemoryAllocator.cpp ****     freeMemHead->size_in_blocks = ((size_t) HEAP_END_ADDR - (size_t) HEAP_START_ADDR) / 64;
  29              		.loc 1 19 5 is_stmt 1
  30              		.loc 1 19 59 is_stmt 0
  31 0028 97070000 		la	a5,HEAP_END_ADDR
  31      83B70700 
  32 0030 83B70700 		ld	a5,0(a5)
  33 0034 83B60600 		ld	a3,0(a3)
  34 0038 B387D740 		sub	a5,a5,a3
  35              		.loc 1 19 18
  36 003c 83360700 		ld	a3,0(a4)
GAS LISTING /tmp/cc35zFKg.s 			page 2


  37              		.loc 1 19 87
  38 0040 93D76700 		srli	a5,a5,6
  39              		.loc 1 19 33
  40 0044 23B4F600 		sd	a5,8(a3)
  20:src/MemoryAllocator.cpp ****     MemoryAllocator::allocatedMemHead = nullptr;
  41              		.loc 1 20 5 is_stmt 1
  42              		.loc 1 20 39 is_stmt 0
  43 0048 23340700 		sd	zero,8(a4)
  21:src/MemoryAllocator.cpp **** }
  44              		.loc 1 21 1
  45 004c 03348100 		ld	s0,8(sp)
  46              		.cfi_restore 8
  47              		.cfi_def_cfa 2, 16
  48 0050 13010101 		addi	sp,sp,16
  49              		.cfi_def_cfa_offset 0
  50 0054 67800000 		jr	ra
  51              		.cfi_endproc
  52              	.LFE0:
  54              		.section	.rodata.str1.8,"aMS",@progbits,1
  55              		.align	3
  56              	.LC0:
  57 0000 4D656D6F 		.string	"Memory allocator error: no free fragments!"
  57      72792061 
  57      6C6C6F63 
  57      61746F72 
  57      20657272 
  58              		.text
  59              		.align	2
  60              		.globl	_ZN15MemoryAllocator9mem_allocEm
  62              	_ZN15MemoryAllocator9mem_allocEm:
  63              	.LFB1:
  22:src/MemoryAllocator.cpp **** 
  23:src/MemoryAllocator.cpp **** void *MemoryAllocator::mem_alloc(size_t numOfBlocksToAlloc) {
  64              		.loc 1 23 61 is_stmt 1
  65              		.cfi_startproc
  66              	.LVL0:
  67 0058 130101FD 		addi	sp,sp,-48
  68              		.cfi_def_cfa_offset 48
  69 005c 23341102 		sd	ra,40(sp)
  70 0060 23308102 		sd	s0,32(sp)
  71 0064 233C9100 		sd	s1,24(sp)
  72 0068 23382101 		sd	s2,16(sp)
  73 006c 23343101 		sd	s3,8(sp)
  74              		.cfi_offset 1, -8
  75              		.cfi_offset 8, -16
  76              		.cfi_offset 9, -24
  77              		.cfi_offset 18, -32
  78              		.cfi_offset 19, -40
  79 0070 13040103 		addi	s0,sp,48
  80              		.cfi_def_cfa 8, 0
  81 0074 13090500 		mv	s2,a0
  24:src/MemoryAllocator.cpp **** //    printFree();
  25:src/MemoryAllocator.cpp **** 
  26:src/MemoryAllocator.cpp ****     FragmentHeader *fragment = freeMemHead, *prev = nullptr;
  82              		.loc 1 26 5
  83              		.loc 1 26 21 is_stmt 0
  84 0078 97040000 		ld	s1,.LANCHOR0
GAS LISTING /tmp/cc35zFKg.s 			page 3


  84      83B40400 
  85              	.LVL1:
  86              		.loc 1 26 46
  87 0080 93090000 		li	s3,0
  88              	.LVL2:
  89              	.L5:
  27:src/MemoryAllocator.cpp ****     for (; fragment != nullptr; prev = fragment, fragment = fragment->next)
  90              		.loc 1 27 5 is_stmt 1 discriminator 1
  91              		.loc 1 27 21 discriminator 1
  92 0084 638C0400 		beqz	s1,.L4
  28:src/MemoryAllocator.cpp ****         if (fragment->size_in_blocks >= numOfBlocksToAlloc)
  93              		.loc 1 28 9
  94              		.loc 1 28 23 is_stmt 0
  95 0088 83B78400 		ld	a5,8(s1)
  96              		.loc 1 28 9
  97 008c 63F82701 		bgeu	a5,s2,.L4
  27:src/MemoryAllocator.cpp ****     for (; fragment != nullptr; prev = fragment, fragment = fragment->next)
  98              		.loc 1 27 5 is_stmt 1
  99              	.LVL3:
  27:src/MemoryAllocator.cpp ****     for (; fragment != nullptr; prev = fragment, fragment = fragment->next)
 100              		.loc 1 27 38 is_stmt 0
 101 0090 93890400 		mv	s3,s1
  27:src/MemoryAllocator.cpp ****     for (; fragment != nullptr; prev = fragment, fragment = fragment->next)
 102              		.loc 1 27 59
 103 0094 83B40400 		ld	s1,0(s1)
 104              	.LVL4:
  27:src/MemoryAllocator.cpp ****     for (; fragment != nullptr; prev = fragment, fragment = fragment->next)
 105              		.loc 1 27 5
 106 0098 6FF0DFFE 		j	.L5
 107              	.L4:
  29:src/MemoryAllocator.cpp ****             break;
  30:src/MemoryAllocator.cpp ****     if (fragment == nullptr) {
 108              		.loc 1 30 5 is_stmt 1
 109 009c 638E0406 		beqz	s1,.L15
 110              	.LVL5:
 111              	.L6:
  31:src/MemoryAllocator.cpp ****         printString("Memory allocator error: no free fragments!");
  32:src/MemoryAllocator.cpp ****     }
  33:src/MemoryAllocator.cpp ****     size_t remainingBlocks = fragment->size_in_blocks - numOfBlocksToAlloc;//minus jedan jer jedan 
 112              		.loc 1 33 5
 113              		.loc 1 33 40 is_stmt 0
 114 00a0 03B78400 		ld	a4,8(s1)
 115              		.loc 1 33 12
 116 00a4 33072741 		sub	a4,a4,s2
 117              	.LVL6:
  34:src/MemoryAllocator.cpp **** //    printAllocated();
  35:src/MemoryAllocator.cpp ****     if (remainingBlocks >= 2) {// minimalna velicina fragmenta su dva bloka
 118              		.loc 1 35 5 is_stmt 1
 119              	.LBB2:
 120 00a8 93071000 		li	a5,1
 121 00ac 63F6E708 		bleu	a4,a5,.L7
 122              	.LBB3:
  36:src/MemoryAllocator.cpp ****         // pravimo novi fragment od ostatka blokova
  37:src/MemoryAllocator.cpp ****         fragment->size_in_blocks = numOfBlocksToAlloc;
 123              		.loc 1 37 9
 124              		.loc 1 37 34 is_stmt 0
 125 00b0 23B42401 		sd	s2,8(s1)
GAS LISTING /tmp/cc35zFKg.s 			page 4


  38:src/MemoryAllocator.cpp ****         FragmentHeader *newFragment = (FragmentHeader *) ((char *) fragment +
 126              		.loc 1 38 9 is_stmt 1
  39:src/MemoryAllocator.cpp ****                                                           (1 + numOfBlocksToAlloc) * MEM_BLOCK_SIZE
 127              		.loc 1 39 62 is_stmt 0
 128 00b4 93071900 		addi	a5,s2,1
 129              		.loc 1 39 84
 130 00b8 93976700 		slli	a5,a5,6
  38:src/MemoryAllocator.cpp ****         FragmentHeader *newFragment = (FragmentHeader *) ((char *) fragment +
 131              		.loc 1 38 25
 132 00bc B387F400 		add	a5,s1,a5
 133              	.LVL7:
  40:src/MemoryAllocator.cpp ****         if (prev) prev->next = newFragment;
 134              		.loc 1 40 9 is_stmt 1
 135 00c0 63860906 		beqz	s3,.L8
 136              		.loc 1 40 19 discriminator 1
 137              		.loc 1 40 30 is_stmt 0 discriminator 1
 138 00c4 23B0F900 		sd	a5,0(s3)
 139              	.L9:
  41:src/MemoryAllocator.cpp ****         else freeMemHead = newFragment;
  42:src/MemoryAllocator.cpp ****         newFragment->next = fragment->next;
 140              		.loc 1 42 9 is_stmt 1
 141              		.loc 1 42 39 is_stmt 0
 142 00c8 83B60400 		ld	a3,0(s1)
 143              		.loc 1 42 27
 144 00cc 23B0D700 		sd	a3,0(a5)
  43:src/MemoryAllocator.cpp ****         newFragment->size_in_blocks = remainingBlocks-1;
 145              		.loc 1 43 9 is_stmt 1
 146              		.loc 1 43 54 is_stmt 0
 147 00d0 1307F7FF 		addi	a4,a4,-1
 148              	.LVL8:
 149              		.loc 1 43 37
 150 00d4 23B4E700 		sd	a4,8(a5)
 151              	.LVL9:
 152              	.L10:
 153              	.LBE3:
 154              	.LBE2:
  44:src/MemoryAllocator.cpp ****     } else {
  45:src/MemoryAllocator.cpp ****         //premalo blokova, spajaju se u jedan fragment
  46:src/MemoryAllocator.cpp ****         if (prev) prev->next = fragment->next;
  47:src/MemoryAllocator.cpp ****         else freeMemHead = fragment->next;
  48:src/MemoryAllocator.cpp ****     }
  49:src/MemoryAllocator.cpp ****     fragment->next = nullptr;
 155              		.loc 1 49 5 is_stmt 1
 156              		.loc 1 49 20 is_stmt 0
 157 00d8 23B00400 		sd	zero,0(s1)
  50:src/MemoryAllocator.cpp **** 
  51:src/MemoryAllocator.cpp ****     //dodavanje u listu alociranih
  52:src/MemoryAllocator.cpp **** //    print_String("**********");
  53:src/MemoryAllocator.cpp ****     FragmentHeader *last = allocatedMemHead;
 158              		.loc 1 53 5 is_stmt 1
 159              		.loc 1 53 21 is_stmt 0
 160 00dc 97070000 		ld	a5,.LANCHOR0+8
 160      83B70700 
 161              	.LVL10:
  54:src/MemoryAllocator.cpp ****     if (allocatedMemHead == nullptr) {
 162              		.loc 1 54 5 is_stmt 1
 163 00e4 638A0706 		beqz	a5,.L16
GAS LISTING /tmp/cc35zFKg.s 			page 5


 164              	.LVL11:
 165              	.L12:
  55:src/MemoryAllocator.cpp ****         allocatedMemHead = fragment;
  56:src/MemoryAllocator.cpp **** 
  57:src/MemoryAllocator.cpp ****     } else {
  58:src/MemoryAllocator.cpp ****         while (last->next) {
 166              		.loc 1 58 9
 167              		.loc 1 58 22
 168 00e8 13870700 		mv	a4,a5
 169 00ec 83B70700 		ld	a5,0(a5)
 170              	.LVL12:
 171 00f0 E39C07FE 		bnez	a5,.L12
  59:src/MemoryAllocator.cpp **** //            printInteger((uint64)last);
  60:src/MemoryAllocator.cpp ****             last = last->next;
  61:src/MemoryAllocator.cpp ****         }
  62:src/MemoryAllocator.cpp **** 
  63:src/MemoryAllocator.cpp ****         last->next = fragment;
 172              		.loc 1 63 9
 173              		.loc 1 63 20 is_stmt 0
 174 00f4 23309700 		sd	s1,0(a4)
 175              	.LVL13:
 176              	.L13:
  64:src/MemoryAllocator.cpp **** 
  65:src/MemoryAllocator.cpp ****     }
  66:src/MemoryAllocator.cpp **** //    print_String("**********");
  67:src/MemoryAllocator.cpp **** 
  68:src/MemoryAllocator.cpp **** //    print_String("Allocated fragment:");
  69:src/MemoryAllocator.cpp **** //    printInteger((uint64)fragment);
  70:src/MemoryAllocator.cpp **** //    printAllocated();
  71:src/MemoryAllocator.cpp **** //    printFree();
  72:src/MemoryAllocator.cpp ****     return (void *)( (char*)fragment + sizeof(FragmentHeader));
 177              		.loc 1 72 5 is_stmt 1
  73:src/MemoryAllocator.cpp **** }
 178              		.loc 1 73 1 is_stmt 0
 179 00f8 13850401 		addi	a0,s1,16
 180 00fc 83308102 		ld	ra,40(sp)
 181              		.cfi_remember_state
 182              		.cfi_restore 1
 183 0100 03340102 		ld	s0,32(sp)
 184              		.cfi_restore 8
 185              		.cfi_def_cfa 2, 48
 186 0104 83348101 		ld	s1,24(sp)
 187              		.cfi_restore 9
 188              	.LVL14:
 189 0108 03390101 		ld	s2,16(sp)
 190              		.cfi_restore 18
 191              	.LVL15:
 192 010c 83398100 		ld	s3,8(sp)
 193              		.cfi_restore 19
 194              	.LVL16:
 195 0110 13010103 		addi	sp,sp,48
 196              		.cfi_def_cfa_offset 0
 197 0114 67800000 		jr	ra
 198              	.LVL17:
 199              	.L15:
 200              		.cfi_restore_state
  31:src/MemoryAllocator.cpp ****     }
GAS LISTING /tmp/cc35zFKg.s 			page 6


 201              		.loc 1 31 9 is_stmt 1
  31:src/MemoryAllocator.cpp ****     }
 202              		.loc 1 31 20 is_stmt 0
 203 0118 17050000 		lla	a0,.LC0
 203      13050500 
 204              	.LVL18:
 205 0120 97000000 		call	_Z11printStringPKc@plt
 205      E7800000 
 206              	.LVL19:
 207 0128 6FF09FF7 		j	.L6
 208              	.LVL20:
 209              	.L8:
 210              	.LBB5:
 211              	.LBB4:
  41:src/MemoryAllocator.cpp ****         newFragment->next = fragment->next;
 212              		.loc 1 41 14 is_stmt 1
  41:src/MemoryAllocator.cpp ****         newFragment->next = fragment->next;
 213              		.loc 1 41 26 is_stmt 0
 214 012c 97060000 		sd	a5,.LANCHOR0,a3
 214      23B0F600 
 215 0134 6FF05FF9 		j	.L9
 216              	.LVL21:
 217              	.L7:
 218              	.LBE4:
  46:src/MemoryAllocator.cpp ****         else freeMemHead = fragment->next;
 219              		.loc 1 46 9 is_stmt 1
 220 0138 63880900 		beqz	s3,.L11
  46:src/MemoryAllocator.cpp ****         else freeMemHead = fragment->next;
 221              		.loc 1 46 19 discriminator 1
  46:src/MemoryAllocator.cpp ****         else freeMemHead = fragment->next;
 222              		.loc 1 46 42 is_stmt 0 discriminator 1
 223 013c 83B70400 		ld	a5,0(s1)
  46:src/MemoryAllocator.cpp ****         else freeMemHead = fragment->next;
 224              		.loc 1 46 30 discriminator 1
 225 0140 23B0F900 		sd	a5,0(s3)
 226 0144 6FF05FF9 		j	.L10
 227              	.L11:
  47:src/MemoryAllocator.cpp ****     }
 228              		.loc 1 47 14 is_stmt 1
  47:src/MemoryAllocator.cpp ****     }
 229              		.loc 1 47 38 is_stmt 0
 230 0148 83B70400 		ld	a5,0(s1)
  47:src/MemoryAllocator.cpp ****     }
 231              		.loc 1 47 26
 232 014c 17070000 		sd	a5,.LANCHOR0,a4
 232      2330F700 
 233              	.LVL22:
 234 0154 6FF05FF8 		j	.L10
 235              	.LVL23:
 236              	.L16:
 237              	.LBE5:
  55:src/MemoryAllocator.cpp **** 
 238              		.loc 1 55 9 is_stmt 1
  55:src/MemoryAllocator.cpp **** 
 239              		.loc 1 55 26 is_stmt 0
 240 0158 97070000 		sd	s1,.LANCHOR0+8,a5
 240      23B09700 
GAS LISTING /tmp/cc35zFKg.s 			page 7


 241              	.LVL24:
 242 0160 6FF09FF9 		j	.L13
 243              		.cfi_endproc
 244              	.LFE1:
 246              		.align	2
 247              		.globl	_ZN15MemoryAllocator20getAllocatedFragmentEPc
 249              	_ZN15MemoryAllocator20getAllocatedFragmentEPc:
 250              	.LFB3:
  74:src/MemoryAllocator.cpp **** 
  75:src/MemoryAllocator.cpp **** int MemoryAllocator::mem_free(void *ptr) {
  76:src/MemoryAllocator.cpp ****     FragmentHeader* toFree = getAllocatedFragment((char*)ptr);
  77:src/MemoryAllocator.cpp **** //    size_t toFreeSizeInBlocks = toFree->size_in_blocks;
  78:src/MemoryAllocator.cpp **** //    printInteger((uint64)toFreeSizeInBlocks);
  79:src/MemoryAllocator.cpp **** //    printAllocated();
  80:src/MemoryAllocator.cpp **** //    printFree();
  81:src/MemoryAllocator.cpp ****     deleteAllocatedFragment((char*)toFree);
  82:src/MemoryAllocator.cpp ****     if(!toFree){
  83:src/MemoryAllocator.cpp ****         printString("MemFree error : nije alociran segment sa tom adresom");
  84:src/MemoryAllocator.cpp ****         return -1; // nije alociran segment sa tom adresom
  85:src/MemoryAllocator.cpp ****     }
  86:src/MemoryAllocator.cpp ****     FragmentHeader* cur = nullptr;
  87:src/MemoryAllocator.cpp ****     if(!freeMemHead || (char*)toFree < (char*)freeMemHead)
  88:src/MemoryAllocator.cpp ****         cur = nullptr;
  89:src/MemoryAllocator.cpp ****     else
  90:src/MemoryAllocator.cpp ****         for(cur = freeMemHead; cur->next != nullptr && (char*)toFree > (char*)(cur->next); cur = cu
  91:src/MemoryAllocator.cpp **** 
  92:src/MemoryAllocator.cpp **** //    FragmentHeader* newSeg = toFree;
  93:src/MemoryAllocator.cpp **** //    newSeg->size_in_blocks = toFree->size_in_blocks + 1;
  94:src/MemoryAllocator.cpp ****     if(cur) toFree->next = cur->next;
  95:src/MemoryAllocator.cpp ****     else toFree->next = freeMemHead;
  96:src/MemoryAllocator.cpp ****     if(cur) cur->next = toFree;
  97:src/MemoryAllocator.cpp ****     else freeMemHead = toFree;
  98:src/MemoryAllocator.cpp **** //    print_String("Deallocated fragment:");
  99:src/MemoryAllocator.cpp **** //    printInteger((uint64)toFree);
 100:src/MemoryAllocator.cpp **** //    printAllocated();
 101:src/MemoryAllocator.cpp **** //printFree();
 102:src/MemoryAllocator.cpp ****     tryToJoin(toFree);
 103:src/MemoryAllocator.cpp ****     tryToJoin(cur);
 104:src/MemoryAllocator.cpp **** //    printFree();
 105:src/MemoryAllocator.cpp **** 
 106:src/MemoryAllocator.cpp ****     return 0;
 107:src/MemoryAllocator.cpp **** }
 108:src/MemoryAllocator.cpp **** 
 109:src/MemoryAllocator.cpp **** FragmentHeader* MemoryAllocator::getAllocatedFragment(char* addr){
 251              		.loc 1 109 66 is_stmt 1
 252              		.cfi_startproc
 253              	.LVL25:
 254 0164 130101FF 		addi	sp,sp,-16
 255              		.cfi_def_cfa_offset 16
 256 0168 23348100 		sd	s0,8(sp)
 257              		.cfi_offset 8, -8
 258 016c 13040101 		addi	s0,sp,16
 259              		.cfi_def_cfa 8, 0
 260 0170 13070500 		mv	a4,a0
 110:src/MemoryAllocator.cpp ****     FragmentHeader* cur = allocatedMemHead;
 261              		.loc 1 110 5
 262              		.loc 1 110 21 is_stmt 0
GAS LISTING /tmp/cc35zFKg.s 			page 8


 263 0174 17050000 		ld	a0,.LANCHOR0+8
 263      03350500 
 264              	.LVL26:
 265              	.L19:
 111:src/MemoryAllocator.cpp ****     while(cur){
 266              		.loc 1 111 5 is_stmt 1
 267              		.loc 1 111 11
 268 017c 630A0500 		beqz	a0,.L17
 112:src/MemoryAllocator.cpp ****         if((char*)cur == addr - sizeof(FragmentHeader)) {
 269              		.loc 1 112 9
 270              		.loc 1 112 31 is_stmt 0
 271 0180 930707FF 		addi	a5,a4,-16
 272              		.loc 1 112 9
 273 0184 6386A700 		beq	a5,a0,.L17
 113:src/MemoryAllocator.cpp ****             return cur;
 114:src/MemoryAllocator.cpp ****         }
 115:src/MemoryAllocator.cpp ****         cur = cur->next;
 274              		.loc 1 115 9 is_stmt 1
 275              		.loc 1 115 13 is_stmt 0
 276 0188 03350500 		ld	a0,0(a0)
 277              	.LVL27:
 111:src/MemoryAllocator.cpp ****         if((char*)cur == addr - sizeof(FragmentHeader)) {
 278              		.loc 1 111 5
 279 018c 6FF01FFF 		j	.L19
 280              	.L17:
 116:src/MemoryAllocator.cpp ****     }
 117:src/MemoryAllocator.cpp ****     return nullptr;
 118:src/MemoryAllocator.cpp **** }
 281              		.loc 1 118 1
 282 0190 03348100 		ld	s0,8(sp)
 283              		.cfi_restore 8
 284              		.cfi_def_cfa 2, 16
 285 0194 13010101 		addi	sp,sp,16
 286              		.cfi_def_cfa_offset 0
 287 0198 67800000 		jr	ra
 288              		.cfi_endproc
 289              	.LFE3:
 291              		.align	2
 292              		.globl	_ZN15MemoryAllocator23deleteAllocatedFragmentEPc
 294              	_ZN15MemoryAllocator23deleteAllocatedFragmentEPc:
 295              	.LFB4:
 119:src/MemoryAllocator.cpp **** //void MemoryAllocator::printAllocated() {
 120:src/MemoryAllocator.cpp **** //    print_String("+++++++++ALLOC++++++++++++");
 121:src/MemoryAllocator.cpp **** //    FragmentHeader* cur = allocatedMemHead;
 122:src/MemoryAllocator.cpp **** //    while(cur){
 123:src/MemoryAllocator.cpp **** //        printInteger((uint64)cur);
 124:src/MemoryAllocator.cpp **** //        cur = cur->next;
 125:src/MemoryAllocator.cpp **** //    }
 126:src/MemoryAllocator.cpp **** //    print_String("+++++++++++++++++++++");
 127:src/MemoryAllocator.cpp **** //
 128:src/MemoryAllocator.cpp **** //}void MemoryAllocator::printFree() {
 129:src/MemoryAllocator.cpp **** //    print_String("+++++++++FREE++++++++++++");
 130:src/MemoryAllocator.cpp **** //    FragmentHeader* cur = freeMemHead;
 131:src/MemoryAllocator.cpp **** //    while(cur){
 132:src/MemoryAllocator.cpp **** //        print_String("-");
 133:src/MemoryAllocator.cpp **** //        printInteger((uint64)cur);
 134:src/MemoryAllocator.cpp **** //        printInteger(cur->size_in_blocks);
GAS LISTING /tmp/cc35zFKg.s 			page 9


 135:src/MemoryAllocator.cpp **** //        print_String("-");
 136:src/MemoryAllocator.cpp **** //
 137:src/MemoryAllocator.cpp **** //        cur = cur->next;
 138:src/MemoryAllocator.cpp **** //    }
 139:src/MemoryAllocator.cpp **** //    print_String("+++++++++++++++++++++");
 140:src/MemoryAllocator.cpp **** //
 141:src/MemoryAllocator.cpp **** //}
 142:src/MemoryAllocator.cpp **** void MemoryAllocator::deleteAllocatedFragment(char* addr){
 296              		.loc 1 142 58 is_stmt 1
 297              		.cfi_startproc
 298              	.LVL28:
 299 019c 130101FF 		addi	sp,sp,-16
 300              		.cfi_def_cfa_offset 16
 301 01a0 23348100 		sd	s0,8(sp)
 302              		.cfi_offset 8, -8
 303 01a4 13040101 		addi	s0,sp,16
 304              		.cfi_def_cfa 8, 0
 143:src/MemoryAllocator.cpp ****     if(allocatedMemHead == nullptr) return;
 305              		.loc 1 143 5
 306              		.loc 1 143 25 is_stmt 0
 307 01a8 97070000 		ld	a5,.LANCHOR0+8
 307      83B70700 
 308              		.loc 1 143 5
 309 01b0 63840704 		beqz	a5,.L21
 144:src/MemoryAllocator.cpp ****     if(allocatedMemHead == (FragmentHeader*) addr) {
 310              		.loc 1 144 5 is_stmt 1
 311 01b4 638AA700 		beq	a5,a0,.L28
 312              	.L23:
 145:src/MemoryAllocator.cpp ****         allocatedMemHead = allocatedMemHead->next;
 146:src/MemoryAllocator.cpp ****     }
 147:src/MemoryAllocator.cpp ****     FragmentHeader* temp = allocatedMemHead;
 313              		.loc 1 147 5
 314              		.loc 1 147 21 is_stmt 0
 315 01b8 97070000 		ld	a5,.LANCHOR0+8
 315      83B70700 
 316              	.LVL29:
 148:src/MemoryAllocator.cpp ****     FragmentHeader* prev = nullptr;
 317              		.loc 1 148 5 is_stmt 1
 318              		.loc 1 148 21 is_stmt 0
 319 01c0 13070000 		li	a4,0
 320 01c4 6F000002 		j	.L24
 321              	.LVL30:
 322              	.L28:
 145:src/MemoryAllocator.cpp ****         allocatedMemHead = allocatedMemHead->next;
 323              		.loc 1 145 9 is_stmt 1
 145:src/MemoryAllocator.cpp ****         allocatedMemHead = allocatedMemHead->next;
 324              		.loc 1 145 46 is_stmt 0
 325 01c8 83B70700 		ld	a5,0(a5)
 145:src/MemoryAllocator.cpp ****         allocatedMemHead = allocatedMemHead->next;
 326              		.loc 1 145 26
 327 01cc 17070000 		sd	a5,.LANCHOR0+8,a4
 327      2330F700 
 328 01d4 6FF05FFE 		j	.L23
 329              	.LVL31:
 330              	.L29:
 149:src/MemoryAllocator.cpp ****     while(temp!=nullptr){
 150:src/MemoryAllocator.cpp ****         if(temp==(FragmentHeader*)addr){
GAS LISTING /tmp/cc35zFKg.s 			page 10


 151:src/MemoryAllocator.cpp ****             prev->next = temp->next;
 331              		.loc 1 151 13 is_stmt 1
 332              		.loc 1 151 32 is_stmt 0
 333 01d8 83B60700 		ld	a3,0(a5)
 334              		.loc 1 151 24
 335 01dc 2330D700 		sd	a3,0(a4)
 152:src/MemoryAllocator.cpp ****             temp = temp->next;
 336              		.loc 1 152 13 is_stmt 1
 337              		.loc 1 152 18 is_stmt 0
 338 01e0 83B70700 		ld	a5,0(a5)
 339              	.LVL32:
 340              	.L24:
 149:src/MemoryAllocator.cpp ****     while(temp!=nullptr){
 341              		.loc 1 149 5 is_stmt 1
 149:src/MemoryAllocator.cpp ****     while(temp!=nullptr){
 342              		.loc 1 149 15
 343 01e4 638A0700 		beqz	a5,.L21
 150:src/MemoryAllocator.cpp ****             prev->next = temp->next;
 344              		.loc 1 150 9
 345 01e8 E388A7FE 		beq	a5,a0,.L29
 153:src/MemoryAllocator.cpp ****         }else{
 154:src/MemoryAllocator.cpp ****             prev = temp;
 346              		.loc 1 154 13
 347              	.LVL33:
 155:src/MemoryAllocator.cpp ****             temp = temp->next;
 348              		.loc 1 155 13
 154:src/MemoryAllocator.cpp ****             temp = temp->next;
 349              		.loc 1 154 18 is_stmt 0
 350 01ec 13870700 		mv	a4,a5
 351              		.loc 1 155 18
 352 01f0 83B70700 		ld	a5,0(a5)
 353              	.LVL34:
 354 01f4 6FF01FFF 		j	.L24
 355              	.LVL35:
 356              	.L21:
 156:src/MemoryAllocator.cpp ****         }
 157:src/MemoryAllocator.cpp ****     }
 158:src/MemoryAllocator.cpp ****     return;
 159:src/MemoryAllocator.cpp **** }
 357              		.loc 1 159 1
 358 01f8 03348100 		ld	s0,8(sp)
 359              		.cfi_restore 8
 360              		.cfi_def_cfa 2, 16
 361 01fc 13010101 		addi	sp,sp,16
 362              		.cfi_def_cfa_offset 0
 363 0200 67800000 		jr	ra
 364              		.cfi_endproc
 365              	.LFE4:
 367              		.align	2
 368              		.globl	_ZN15MemoryAllocator9tryToJoinEP14FragmentHeader
 370              	_ZN15MemoryAllocator9tryToJoinEP14FragmentHeader:
 371              	.LFB5:
 160:src/MemoryAllocator.cpp **** 
 161:src/MemoryAllocator.cpp **** 
 162:src/MemoryAllocator.cpp **** int MemoryAllocator::tryToJoin(FragmentHeader *cur) {
 372              		.loc 1 162 53 is_stmt 1
 373              		.cfi_startproc
GAS LISTING /tmp/cc35zFKg.s 			page 11


 374              	.LVL36:
 163:src/MemoryAllocator.cpp ****     if (!cur) return 0;
 375              		.loc 1 163 5
 376 0204 63080506 		beqz	a0,.L32
 164:src/MemoryAllocator.cpp ****     if (cur->next && (char *) cur + (cur->size_in_blocks + 1)* MEM_BLOCK_SIZE == (char *) (cur->nex
 377              		.loc 1 164 5
 378              		.loc 1 164 14 is_stmt 0
 379 0208 03370500 		ld	a4,0(a0)
 380              		.loc 1 164 5
 381 020c 63080706 		beqz	a4,.L33
 382              		.loc 1 164 43 discriminator 1
 383 0210 83368500 		ld	a3,8(a0)
 384              		.loc 1 164 58 discriminator 1
 385 0214 93871600 		addi	a5,a3,1
 386              		.loc 1 164 62 discriminator 1
 387 0218 93976700 		slli	a5,a5,6
 388              		.loc 1 164 35 discriminator 1
 389 021c B307F500 		add	a5,a0,a5
 390              		.loc 1 164 19 discriminator 1
 391 0220 6306F700 		beq	a4,a5,.L39
 165:src/MemoryAllocator.cpp ****         cur->size_in_blocks += cur->next->size_in_blocks + 1;
 166:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 167:src/MemoryAllocator.cpp ****         deleteAllocatedFragment((char*)cur->next);
 168:src/MemoryAllocator.cpp ****         return 1;
 169:src/MemoryAllocator.cpp ****     } else
 170:src/MemoryAllocator.cpp ****         return 0;
 392              		.loc 1 170 16
 393 0224 13050000 		li	a0,0
 394              	.LVL37:
 171:src/MemoryAllocator.cpp **** }...
 395              		.loc 1 171 1
 396 0228 67800000 		ret
 397              	.LVL38:
 398              	.L39:
 162:src/MemoryAllocator.cpp **** int MemoryAllocator::tryToJoin(FragmentHeader *cur) {
 399              		.loc 1 162 53
 400 022c 130101FF 		addi	sp,sp,-16
 401              		.cfi_def_cfa_offset 16
 402 0230 23341100 		sd	ra,8(sp)
 403 0234 23308100 		sd	s0,0(sp)
 404              		.cfi_offset 1, -8
 405              		.cfi_offset 8, -16
 406 0238 13040101 		addi	s0,sp,16
 407              		.cfi_def_cfa 8, 0
 165:src/MemoryAllocator.cpp ****         cur->size_in_blocks += cur->next->size_in_blocks + 1;
 408              		.loc 1 165 9 is_stmt 1
 165:src/MemoryAllocator.cpp ****         cur->size_in_blocks += cur->next->size_in_blocks + 1;
 409              		.loc 1 165 43 is_stmt 0
 410 023c 83378700 		ld	a5,8(a4)
 165:src/MemoryAllocator.cpp ****         cur->size_in_blocks += cur->next->size_in_blocks + 1;
 411              		.loc 1 165 29
 412 0240 B386F600 		add	a3,a3,a5
 413 0244 93861600 		addi	a3,a3,1
 414 0248 2334D500 		sd	a3,8(a0)
 166:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 415              		.loc 1 166 9 is_stmt 1
 166:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
GAS LISTING /tmp/cc35zFKg.s 			page 12


 416              		.loc 1 166 32 is_stmt 0
 417 024c 83370700 		ld	a5,0(a4)
 166:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 418              		.loc 1 166 19
 419 0250 2330F500 		sd	a5,0(a0)
 167:src/MemoryAllocator.cpp ****         deleteAllocatedFragment((char*)cur->next);
 420              		.loc 1 167 9 is_stmt 1
 167:src/MemoryAllocator.cpp ****         deleteAllocatedFragment((char*)cur->next);
 421              		.loc 1 167 32 is_stmt 0
 422 0254 13850700 		mv	a0,a5
 423              	.LVL39:
 424 0258 97000000 		call	_ZN15MemoryAllocator23deleteAllocatedFragmentEPc
 424      E7800000 
 425              	.LVL40:
 168:src/MemoryAllocator.cpp ****         return 1;
 426              		.loc 1 168 9 is_stmt 1
 168:src/MemoryAllocator.cpp ****         return 1;
 427              		.loc 1 168 16 is_stmt 0
 428 0260 13051000 		li	a0,1
 429              		.loc 1 171 1
 430 0264 83308100 		ld	ra,8(sp)
 431              		.cfi_restore 1
 432 0268 03340100 		ld	s0,0(sp)
 433              		.cfi_restore 8
 434              		.cfi_def_cfa 2, 16
 435 026c 13010101 		addi	sp,sp,16
 436              		.cfi_def_cfa_offset 0
 437 0270 67800000 		jr	ra
 438              	.LVL41:
 439              	.L32:
 163:src/MemoryAllocator.cpp ****     if (!cur) return 0;
 440              		.loc 1 163 22
 441 0274 13050000 		li	a0,0
 442              	.LVL42:
 443 0278 67800000 		ret
 444              	.LVL43:
 445              	.L33:
 170:src/MemoryAllocator.cpp ****         return 0;
 446              		.loc 1 170 16
 447 027c 13050000 		li	a0,0
 448              	.LVL44:
 449 0280 67800000 		ret
 450              		.cfi_endproc
 451              	.LFE5:
 453              		.section	.rodata.str1.8
 454 002b 00000000 		.align	3
 454      00
 455              	.LC1:
 456 0030 4D656D46 		.string	"MemFree error : nije alociran segment sa tom adresom"
 456      72656520 
 456      6572726F 
 456      72203A20 
 456      6E696A65 
 457              		.text
 458              		.align	2
 459              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 461              	_ZN15MemoryAllocator8mem_freeEPv:
GAS LISTING /tmp/cc35zFKg.s 			page 13


 462              	.LFB2:
  75:src/MemoryAllocator.cpp **** int MemoryAllocator::mem_free(void *ptr) {
 463              		.loc 1 75 42 is_stmt 1
 464              		.cfi_startproc
 465              	.LVL45:
 466 0284 130101FE 		addi	sp,sp,-32
 467              		.cfi_def_cfa_offset 32
 468 0288 233C1100 		sd	ra,24(sp)
 469 028c 23388100 		sd	s0,16(sp)
 470 0290 23349100 		sd	s1,8(sp)
 471 0294 23302101 		sd	s2,0(sp)
 472              		.cfi_offset 1, -8
 473              		.cfi_offset 8, -16
 474              		.cfi_offset 9, -24
 475              		.cfi_offset 18, -32
 476 0298 13040102 		addi	s0,sp,32
 477              		.cfi_def_cfa 8, 0
  76:src/MemoryAllocator.cpp ****     FragmentHeader* toFree = getAllocatedFragment((char*)ptr);
 478              		.loc 1 76 5
  76:src/MemoryAllocator.cpp ****     FragmentHeader* toFree = getAllocatedFragment((char*)ptr);
 479              		.loc 1 76 50 is_stmt 0
 480 029c 97000000 		call	_ZN15MemoryAllocator20getAllocatedFragmentEPc
 480      E7800000 
 481              	.LVL46:
 482 02a4 93040500 		mv	s1,a0
 483              	.LVL47:
  81:src/MemoryAllocator.cpp ****     deleteAllocatedFragment((char*)toFree);
 484              		.loc 1 81 5 is_stmt 1
  81:src/MemoryAllocator.cpp ****     deleteAllocatedFragment((char*)toFree);
 485              		.loc 1 81 28 is_stmt 0
 486 02a8 97000000 		call	_ZN15MemoryAllocator23deleteAllocatedFragmentEPc
 486      E7800000 
 487              	.LVL48:
  82:src/MemoryAllocator.cpp ****     if(!toFree){
 488              		.loc 1 82 5 is_stmt 1
 489 02b0 638A0402 		beqz	s1,.L52
  86:src/MemoryAllocator.cpp ****     FragmentHeader* cur = nullptr;
 490              		.loc 1 86 5
 491              	.LVL49:
  87:src/MemoryAllocator.cpp ****     if(!freeMemHead || (char*)toFree < (char*)freeMemHead)
 492              		.loc 1 87 5
  87:src/MemoryAllocator.cpp ****     if(!freeMemHead || (char*)toFree < (char*)freeMemHead)
 493              		.loc 1 87 8 is_stmt 0
 494 02b4 17070000 		ld	a4,.LANCHOR0
 494      03370700 
  87:src/MemoryAllocator.cpp ****     if(!freeMemHead || (char*)toFree < (char*)freeMemHead)
 495              		.loc 1 87 5
 496 02bc 63000704 		beqz	a4,.L49
  87:src/MemoryAllocator.cpp ****     if(!freeMemHead || (char*)toFree < (char*)freeMemHead)
 497              		.loc 1 87 21 discriminator 1
 498 02c0 63E2E404 		bgtu	a4,s1,.L50
  90:src/MemoryAllocator.cpp ****         for(cur = freeMemHead; cur->next != nullptr && (char*)toFree > (char*)(cur->next); cur = cu
 499              		.loc 1 90 17
 500 02c4 93070700 		mv	a5,a4
 501              	.LVL50:
 502              	.L45:
  90:src/MemoryAllocator.cpp ****         for(cur = freeMemHead; cur->next != nullptr && (char*)toFree > (char*)(cur->next); cur = cu
GAS LISTING /tmp/cc35zFKg.s 			page 14


 503              		.loc 1 90 53 is_stmt 1 discriminator 4
 504 02c8 13890700 		mv	s2,a5
  90:src/MemoryAllocator.cpp ****         for(cur = freeMemHead; cur->next != nullptr && (char*)toFree > (char*)(cur->next); cur = cu
 505              		.loc 1 90 37 is_stmt 0 discriminator 4
 506 02cc 83B70700 		ld	a5,0(a5)
 507              	.LVL51:
  90:src/MemoryAllocator.cpp ****         for(cur = freeMemHead; cur->next != nullptr && (char*)toFree > (char*)(cur->next); cur = cu
 508              		.loc 1 90 53 discriminator 4
 509 02d0 63840700 		beqz	a5,.L44
  90:src/MemoryAllocator.cpp ****         for(cur = freeMemHead; cur->next != nullptr && (char*)toFree > (char*)(cur->next); cur = cu
 510              		.loc 1 90 53 discriminator 2
 511 02d4 E3EA97FE 		bltu	a5,s1,.L45
 512              	.L44:
  94:src/MemoryAllocator.cpp ****     if(cur) toFree->next = cur->next;
 513              		.loc 1 94 5 is_stmt 1
 514 02d8 63080902 		beqz	s2,.L43
  94:src/MemoryAllocator.cpp ****     if(cur) toFree->next = cur->next;
 515              		.loc 1 94 13 discriminator 1
  94:src/MemoryAllocator.cpp ****     if(cur) toFree->next = cur->next;
 516              		.loc 1 94 26 is_stmt 0 discriminator 1
 517 02dc 23B0F400 		sd	a5,0(s1)
 518 02e0 6F00C002 		j	.L46
 519              	.LVL52:
 520              	.L52:
  83:src/MemoryAllocator.cpp ****         printString("MemFree error : nije alociran segment sa tom adresom");
 521              		.loc 1 83 9 is_stmt 1
  83:src/MemoryAllocator.cpp ****         printString("MemFree error : nije alociran segment sa tom adresom");
 522              		.loc 1 83 20 is_stmt 0
 523 02e4 17050000 		lla	a0,.LC1
 523      13050500 
 524 02ec 97000000 		call	_Z11printStringPKc@plt
 524      E7800000 
 525              	.LVL53:
  84:src/MemoryAllocator.cpp ****         return -1; // nije alociran segment sa tom adresom
 526              		.loc 1 84 9 is_stmt 1
  84:src/MemoryAllocator.cpp ****         return -1; // nije alociran segment sa tom adresom
 527              		.loc 1 84 17 is_stmt 0
 528 02f4 1305F0FF 		li	a0,-1
 529 02f8 6F008003 		j	.L42
 530              	.LVL54:
 531              	.L49:
  88:src/MemoryAllocator.cpp ****         cur = nullptr;
 532              		.loc 1 88 13
 533 02fc 13090700 		mv	s2,a4
 534 0300 6F008000 		j	.L43
 535              	.L50:
 536 0304 13090000 		li	s2,0
 537              	.LVL55:
 538              	.L43:
  95:src/MemoryAllocator.cpp ****     else toFree->next = freeMemHead;
 539              		.loc 1 95 10 is_stmt 1
  95:src/MemoryAllocator.cpp ****     else toFree->next = freeMemHead;
 540              		.loc 1 95 23 is_stmt 0
 541 0308 23B0E400 		sd	a4,0(s1)
 542              	.L46:
  96:src/MemoryAllocator.cpp ****     if(cur) cur->next = toFree;
 543              		.loc 1 96 5 is_stmt 1
GAS LISTING /tmp/cc35zFKg.s 			page 15


 544 030c 630E0902 		beqz	s2,.L47
  96:src/MemoryAllocator.cpp ****     if(cur) cur->next = toFree;
 545              		.loc 1 96 13 discriminator 1
  96:src/MemoryAllocator.cpp ****     if(cur) cur->next = toFree;
 546              		.loc 1 96 23 is_stmt 0 discriminator 1
 547 0310 23309900 		sd	s1,0(s2)
 548              	.L48:
 102:src/MemoryAllocator.cpp ****     tryToJoin(toFree);
 549              		.loc 1 102 5 is_stmt 1
 102:src/MemoryAllocator.cpp ****     tryToJoin(toFree);
 550              		.loc 1 102 14 is_stmt 0
 551 0314 13850400 		mv	a0,s1
 552 0318 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP14FragmentHeader
 552      E7800000 
 553              	.LVL56:
 103:src/MemoryAllocator.cpp ****     tryToJoin(cur);
 554              		.loc 1 103 5 is_stmt 1
 103:src/MemoryAllocator.cpp ****     tryToJoin(cur);
 555              		.loc 1 103 14 is_stmt 0
 556 0320 13050900 		mv	a0,s2
 557 0324 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP14FragmentHeader
 557      E7800000 
 558              	.LVL57:
 106:src/MemoryAllocator.cpp ****     return 0;
 559              		.loc 1 106 5 is_stmt 1
 106:src/MemoryAllocator.cpp ****     return 0;
 560              		.loc 1 106 12 is_stmt 0
 561 032c 13050000 		li	a0,0
 562              	.L42:
 107:src/MemoryAllocator.cpp **** }
 563              		.loc 1 107 1
 564 0330 83308101 		ld	ra,24(sp)
 565              		.cfi_remember_state
 566              		.cfi_restore 1
 567 0334 03340101 		ld	s0,16(sp)
 568              		.cfi_restore 8
 569              		.cfi_def_cfa 2, 32
 570 0338 83348100 		ld	s1,8(sp)
 571              		.cfi_restore 9
 572              	.LVL58:
 573 033c 03390100 		ld	s2,0(sp)
 574              		.cfi_restore 18
 575 0340 13010102 		addi	sp,sp,32
 576              		.cfi_def_cfa_offset 0
 577 0344 67800000 		jr	ra
 578              	.LVL59:
 579              	.L47:
 580              		.cfi_restore_state
  97:src/MemoryAllocator.cpp ****     else freeMemHead = toFree;
 581              		.loc 1 97 10 is_stmt 1
  97:src/MemoryAllocator.cpp ****     else freeMemHead = toFree;
 582              		.loc 1 97 22 is_stmt 0
 583 0348 97070000 		sd	s1,.LANCHOR0,a5
 583      23B09700 
 584 0350 6FF05FFC 		j	.L48
 585              		.cfi_endproc
 586              	.LFE2:
GAS LISTING /tmp/cc35zFKg.s 			page 16


 588              		.globl	_ZN15MemoryAllocator16allocatedMemHeadE
 589              		.globl	_ZN15MemoryAllocator11freeMemHeadE
 590              		.bss
 591              		.align	3
 592              		.set	.LANCHOR0,. + 0
 595              	_ZN15MemoryAllocator11freeMemHeadE:
 596 0000 00000000 		.zero	8
 596      00000000 
 599              	_ZN15MemoryAllocator16allocatedMemHeadE:
 600 0008 00000000 		.zero	8
 600      00000000 
 601              		.text
 602              	.Letext0:
 603              		.file 2 "src/../h/../lib/hw.h"
 604              		.file 3 "src/../h/MemoryAllocator.hpp"
 605              		.file 4 "src/../test/../h/syscall_c.hpp"
 606              		.file 5 "src/../test/printing.hpp"
GAS LISTING /tmp/cc35zFKg.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/cc35zFKg.s:9      .text:0000000000000000 _ZN15MemoryAllocator11getInstanceEv
     /tmp/cc35zFKg.s:13     .text:0000000000000000 .L0 
     /tmp/cc35zFKg.s:14     .text:0000000000000000 .L0 
     /tmp/cc35zFKg.s:15     .text:0000000000000004 .L0 
     /tmp/cc35zFKg.s:17     .text:0000000000000008 .L0 
     /tmp/cc35zFKg.s:19     .text:000000000000000c .L0 
     /tmp/cc35zFKg.s:21     .text:000000000000000c .L0 
     /tmp/cc35zFKg.s:22     .text:000000000000000c .L0 
     /tmp/cc35zFKg.s:27     .text:0000000000000024 .L0 
     /tmp/cc35zFKg.s:28     .text:0000000000000024 .L0 
     /tmp/cc35zFKg.s:30     .text:0000000000000028 .L0 
     /tmp/cc35zFKg.s:31     .text:0000000000000028 .L0 
     /tmp/cc35zFKg.s:36     .text:000000000000003c .L0 
     /tmp/cc35zFKg.s:38     .text:0000000000000040 .L0 
     /tmp/cc35zFKg.s:40     .text:0000000000000044 .L0 
     /tmp/cc35zFKg.s:42     .text:0000000000000048 .L0 
     /tmp/cc35zFKg.s:43     .text:0000000000000048 .L0 
     /tmp/cc35zFKg.s:45     .text:000000000000004c .L0 
     /tmp/cc35zFKg.s:46     .text:0000000000000050 .L0 
     /tmp/cc35zFKg.s:47     .text:0000000000000050 .L0 
     /tmp/cc35zFKg.s:49     .text:0000000000000054 .L0 
     /tmp/cc35zFKg.s:51     .text:0000000000000058 .L0 
     /tmp/cc35zFKg.s:62     .text:0000000000000058 _ZN15MemoryAllocator9mem_allocEm
     /tmp/cc35zFKg.s:65     .text:0000000000000058 .L0 
     /tmp/cc35zFKg.s:67     .text:0000000000000058 .L0 
     /tmp/cc35zFKg.s:68     .text:000000000000005c .L0 
     /tmp/cc35zFKg.s:74     .text:0000000000000070 .L0 
     /tmp/cc35zFKg.s:75     .text:0000000000000070 .L0 
     /tmp/cc35zFKg.s:76     .text:0000000000000070 .L0 
     /tmp/cc35zFKg.s:77     .text:0000000000000070 .L0 
     /tmp/cc35zFKg.s:78     .text:0000000000000070 .L0 
     /tmp/cc35zFKg.s:80     .text:0000000000000074 .L0 
     /tmp/cc35zFKg.s:83     .text:0000000000000078 .L0 
     /tmp/cc35zFKg.s:84     .text:0000000000000078 .L0 
     /tmp/cc35zFKg.s:87     .text:0000000000000080 .L0 
     /tmp/cc35zFKg.s:91     .text:0000000000000084 .L0 
     /tmp/cc35zFKg.s:92     .text:0000000000000084 .L0 
     /tmp/cc35zFKg.s:94     .text:0000000000000088 .L0 
     /tmp/cc35zFKg.s:95     .text:0000000000000088 .L0 
     /tmp/cc35zFKg.s:97     .text:000000000000008c .L0 
     /tmp/cc35zFKg.s:100    .text:0000000000000090 .L0 
     /tmp/cc35zFKg.s:101    .text:0000000000000090 .L0 
     /tmp/cc35zFKg.s:103    .text:0000000000000094 .L0 
     /tmp/cc35zFKg.s:106    .text:0000000000000098 .L0 
     /tmp/cc35zFKg.s:109    .text:000000000000009c .L0 
     /tmp/cc35zFKg.s:113    .text:00000000000000a0 .L0 
     /tmp/cc35zFKg.s:114    .text:00000000000000a0 .L0 
     /tmp/cc35zFKg.s:116    .text:00000000000000a4 .L0 
     /tmp/cc35zFKg.s:120    .text:00000000000000a8 .L0 
     /tmp/cc35zFKg.s:124    .text:00000000000000b0 .L0 
     /tmp/cc35zFKg.s:125    .text:00000000000000b0 .L0 
     /tmp/cc35zFKg.s:127    .text:00000000000000b4 .L0 
     /tmp/cc35zFKg.s:128    .text:00000000000000b4 .L0 
     /tmp/cc35zFKg.s:130    .text:00000000000000b8 .L0 
     /tmp/cc35zFKg.s:132    .text:00000000000000bc .L0 
GAS LISTING /tmp/cc35zFKg.s 			page 18


     /tmp/cc35zFKg.s:135    .text:00000000000000c0 .L0 
     /tmp/cc35zFKg.s:137    .text:00000000000000c4 .L0 
     /tmp/cc35zFKg.s:138    .text:00000000000000c4 .L0 
     /tmp/cc35zFKg.s:141    .text:00000000000000c8 .L0 
     /tmp/cc35zFKg.s:142    .text:00000000000000c8 .L0 
     /tmp/cc35zFKg.s:144    .text:00000000000000cc .L0 
     /tmp/cc35zFKg.s:146    .text:00000000000000d0 .L0 
     /tmp/cc35zFKg.s:147    .text:00000000000000d0 .L0 
     /tmp/cc35zFKg.s:150    .text:00000000000000d4 .L0 
     /tmp/cc35zFKg.s:156    .text:00000000000000d8 .L0 
     /tmp/cc35zFKg.s:157    .text:00000000000000d8 .L0 
     /tmp/cc35zFKg.s:159    .text:00000000000000dc .L0 
     /tmp/cc35zFKg.s:160    .text:00000000000000dc .L0 
     /tmp/cc35zFKg.s:163    .text:00000000000000e4 .L0 
     /tmp/cc35zFKg.s:167    .text:00000000000000e8 .L0 
     /tmp/cc35zFKg.s:168    .text:00000000000000e8 .L0 
     /tmp/cc35zFKg.s:173    .text:00000000000000f4 .L0 
     /tmp/cc35zFKg.s:174    .text:00000000000000f4 .L0 
     /tmp/cc35zFKg.s:178    .text:00000000000000f8 .L0 
     /tmp/cc35zFKg.s:179    .text:00000000000000f8 .L0 
     /tmp/cc35zFKg.s:181    .text:0000000000000100 .L0 
     /tmp/cc35zFKg.s:182    .text:0000000000000100 .L0 
     /tmp/cc35zFKg.s:184    .text:0000000000000104 .L0 
     /tmp/cc35zFKg.s:185    .text:0000000000000104 .L0 
     /tmp/cc35zFKg.s:187    .text:0000000000000108 .L0 
     /tmp/cc35zFKg.s:190    .text:000000000000010c .L0 
     /tmp/cc35zFKg.s:193    .text:0000000000000110 .L0 
     /tmp/cc35zFKg.s:196    .text:0000000000000114 .L0 
     /tmp/cc35zFKg.s:200    .text:0000000000000118 .L0 
     /tmp/cc35zFKg.s:202    .text:0000000000000118 .L0 
     /tmp/cc35zFKg.s:203    .text:0000000000000118 .L0 
     /tmp/cc35zFKg.s:213    .text:000000000000012c .L0 
     /tmp/cc35zFKg.s:214    .text:000000000000012c .L0 
     /tmp/cc35zFKg.s:220    .text:0000000000000138 .L0 
     /tmp/cc35zFKg.s:222    .text:000000000000013c .L0 
     /tmp/cc35zFKg.s:223    .text:000000000000013c .L0 
     /tmp/cc35zFKg.s:225    .text:0000000000000140 .L0 
     /tmp/cc35zFKg.s:229    .text:0000000000000148 .L0 
     /tmp/cc35zFKg.s:230    .text:0000000000000148 .L0 
     /tmp/cc35zFKg.s:232    .text:000000000000014c .L0 
     /tmp/cc35zFKg.s:239    .text:0000000000000158 .L0 
     /tmp/cc35zFKg.s:240    .text:0000000000000158 .L0 
     /tmp/cc35zFKg.s:243    .text:0000000000000164 .L0 
     /tmp/cc35zFKg.s:249    .text:0000000000000164 _ZN15MemoryAllocator20getAllocatedFragmentEPc
     /tmp/cc35zFKg.s:252    .text:0000000000000164 .L0 
     /tmp/cc35zFKg.s:254    .text:0000000000000164 .L0 
     /tmp/cc35zFKg.s:255    .text:0000000000000168 .L0 
     /tmp/cc35zFKg.s:257    .text:000000000000016c .L0 
     /tmp/cc35zFKg.s:259    .text:0000000000000170 .L0 
     /tmp/cc35zFKg.s:262    .text:0000000000000174 .L0 
     /tmp/cc35zFKg.s:263    .text:0000000000000174 .L0 
     /tmp/cc35zFKg.s:267    .text:000000000000017c .L0 
     /tmp/cc35zFKg.s:268    .text:000000000000017c .L0 
     /tmp/cc35zFKg.s:270    .text:0000000000000180 .L0 
     /tmp/cc35zFKg.s:271    .text:0000000000000180 .L0 
     /tmp/cc35zFKg.s:273    .text:0000000000000184 .L0 
     /tmp/cc35zFKg.s:275    .text:0000000000000188 .L0 
GAS LISTING /tmp/cc35zFKg.s 			page 19


     /tmp/cc35zFKg.s:276    .text:0000000000000188 .L0 
     /tmp/cc35zFKg.s:279    .text:000000000000018c .L0 
     /tmp/cc35zFKg.s:282    .text:0000000000000190 .L0 
     /tmp/cc35zFKg.s:283    .text:0000000000000194 .L0 
     /tmp/cc35zFKg.s:284    .text:0000000000000194 .L0 
     /tmp/cc35zFKg.s:286    .text:0000000000000198 .L0 
     /tmp/cc35zFKg.s:288    .text:000000000000019c .L0 
     /tmp/cc35zFKg.s:294    .text:000000000000019c _ZN15MemoryAllocator23deleteAllocatedFragmentEPc
     /tmp/cc35zFKg.s:297    .text:000000000000019c .L0 
     /tmp/cc35zFKg.s:299    .text:000000000000019c .L0 
     /tmp/cc35zFKg.s:300    .text:00000000000001a0 .L0 
     /tmp/cc35zFKg.s:302    .text:00000000000001a4 .L0 
     /tmp/cc35zFKg.s:304    .text:00000000000001a8 .L0 
     /tmp/cc35zFKg.s:306    .text:00000000000001a8 .L0 
     /tmp/cc35zFKg.s:307    .text:00000000000001a8 .L0 
     /tmp/cc35zFKg.s:309    .text:00000000000001b0 .L0 
     /tmp/cc35zFKg.s:311    .text:00000000000001b4 .L0 
     /tmp/cc35zFKg.s:314    .text:00000000000001b8 .L0 
     /tmp/cc35zFKg.s:315    .text:00000000000001b8 .L0 
     /tmp/cc35zFKg.s:318    .text:00000000000001c0 .L0 
     /tmp/cc35zFKg.s:319    .text:00000000000001c0 .L0 
     /tmp/cc35zFKg.s:324    .text:00000000000001c8 .L0 
     /tmp/cc35zFKg.s:325    .text:00000000000001c8 .L0 
     /tmp/cc35zFKg.s:327    .text:00000000000001cc .L0 
     /tmp/cc35zFKg.s:332    .text:00000000000001d8 .L0 
     /tmp/cc35zFKg.s:333    .text:00000000000001d8 .L0 
     /tmp/cc35zFKg.s:335    .text:00000000000001dc .L0 
     /tmp/cc35zFKg.s:337    .text:00000000000001e0 .L0 
     /tmp/cc35zFKg.s:338    .text:00000000000001e0 .L0 
     /tmp/cc35zFKg.s:342    .text:00000000000001e4 .L0 
     /tmp/cc35zFKg.s:343    .text:00000000000001e4 .L0 
     /tmp/cc35zFKg.s:345    .text:00000000000001e8 .L0 
     /tmp/cc35zFKg.s:348    .text:00000000000001ec .L0 
     /tmp/cc35zFKg.s:349    .text:00000000000001ec .L0 
     /tmp/cc35zFKg.s:350    .text:00000000000001ec .L0 
     /tmp/cc35zFKg.s:352    .text:00000000000001f0 .L0 
     /tmp/cc35zFKg.s:358    .text:00000000000001f8 .L0 
     /tmp/cc35zFKg.s:359    .text:00000000000001fc .L0 
     /tmp/cc35zFKg.s:360    .text:00000000000001fc .L0 
     /tmp/cc35zFKg.s:362    .text:0000000000000200 .L0 
     /tmp/cc35zFKg.s:364    .text:0000000000000204 .L0 
     /tmp/cc35zFKg.s:370    .text:0000000000000204 _ZN15MemoryAllocator9tryToJoinEP14FragmentHeader
     /tmp/cc35zFKg.s:373    .text:0000000000000204 .L0 
     /tmp/cc35zFKg.s:375    .text:0000000000000204 .L0 
     /tmp/cc35zFKg.s:376    .text:0000000000000204 .L0 
     /tmp/cc35zFKg.s:378    .text:0000000000000208 .L0 
     /tmp/cc35zFKg.s:379    .text:0000000000000208 .L0 
     /tmp/cc35zFKg.s:381    .text:000000000000020c .L0 
     /tmp/cc35zFKg.s:383    .text:0000000000000210 .L0 
     /tmp/cc35zFKg.s:385    .text:0000000000000214 .L0 
     /tmp/cc35zFKg.s:387    .text:0000000000000218 .L0 
     /tmp/cc35zFKg.s:389    .text:000000000000021c .L0 
     /tmp/cc35zFKg.s:391    .text:0000000000000220 .L0 
     /tmp/cc35zFKg.s:393    .text:0000000000000224 .L0 
     /tmp/cc35zFKg.s:396    .text:0000000000000228 .L0 
     /tmp/cc35zFKg.s:400    .text:000000000000022c .L0 
     /tmp/cc35zFKg.s:401    .text:0000000000000230 .L0 
GAS LISTING /tmp/cc35zFKg.s 			page 20


     /tmp/cc35zFKg.s:404    .text:0000000000000238 .L0 
     /tmp/cc35zFKg.s:405    .text:0000000000000238 .L0 
     /tmp/cc35zFKg.s:407    .text:000000000000023c .L0 
     /tmp/cc35zFKg.s:409    .text:000000000000023c .L0 
     /tmp/cc35zFKg.s:410    .text:000000000000023c .L0 
     /tmp/cc35zFKg.s:412    .text:0000000000000240 .L0 
     /tmp/cc35zFKg.s:416    .text:000000000000024c .L0 
     /tmp/cc35zFKg.s:417    .text:000000000000024c .L0 
     /tmp/cc35zFKg.s:419    .text:0000000000000250 .L0 
     /tmp/cc35zFKg.s:421    .text:0000000000000254 .L0 
     /tmp/cc35zFKg.s:422    .text:0000000000000254 .L0 
     /tmp/cc35zFKg.s:427    .text:0000000000000260 .L0 
     /tmp/cc35zFKg.s:428    .text:0000000000000260 .L0 
     /tmp/cc35zFKg.s:430    .text:0000000000000264 .L0 
     /tmp/cc35zFKg.s:431    .text:0000000000000268 .L0 
     /tmp/cc35zFKg.s:433    .text:000000000000026c .L0 
     /tmp/cc35zFKg.s:434    .text:000000000000026c .L0 
     /tmp/cc35zFKg.s:436    .text:0000000000000270 .L0 
     /tmp/cc35zFKg.s:441    .text:0000000000000274 .L0 
     /tmp/cc35zFKg.s:447    .text:000000000000027c .L0 
     /tmp/cc35zFKg.s:450    .text:0000000000000284 .L0 
     /tmp/cc35zFKg.s:461    .text:0000000000000284 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/cc35zFKg.s:464    .text:0000000000000284 .L0 
     /tmp/cc35zFKg.s:466    .text:0000000000000284 .L0 
     /tmp/cc35zFKg.s:467    .text:0000000000000288 .L0 
     /tmp/cc35zFKg.s:472    .text:0000000000000298 .L0 
     /tmp/cc35zFKg.s:473    .text:0000000000000298 .L0 
     /tmp/cc35zFKg.s:474    .text:0000000000000298 .L0 
     /tmp/cc35zFKg.s:475    .text:0000000000000298 .L0 
     /tmp/cc35zFKg.s:477    .text:000000000000029c .L0 
     /tmp/cc35zFKg.s:479    .text:000000000000029c .L0 
     /tmp/cc35zFKg.s:480    .text:000000000000029c .L0 
     /tmp/cc35zFKg.s:485    .text:00000000000002a8 .L0 
     /tmp/cc35zFKg.s:486    .text:00000000000002a8 .L0 
     /tmp/cc35zFKg.s:489    .text:00000000000002b0 .L0 
     /tmp/cc35zFKg.s:492    .text:00000000000002b4 .L0 
     /tmp/cc35zFKg.s:493    .text:00000000000002b4 .L0 
     /tmp/cc35zFKg.s:494    .text:00000000000002b4 .L0 
     /tmp/cc35zFKg.s:496    .text:00000000000002bc .L0 
     /tmp/cc35zFKg.s:498    .text:00000000000002c0 .L0 
     /tmp/cc35zFKg.s:500    .text:00000000000002c4 .L0 
     /tmp/cc35zFKg.s:504    .text:00000000000002c8 .L0 
     /tmp/cc35zFKg.s:506    .text:00000000000002cc .L0 
     /tmp/cc35zFKg.s:509    .text:00000000000002d0 .L0 
     /tmp/cc35zFKg.s:511    .text:00000000000002d4 .L0 
     /tmp/cc35zFKg.s:514    .text:00000000000002d8 .L0 
     /tmp/cc35zFKg.s:516    .text:00000000000002dc .L0 
     /tmp/cc35zFKg.s:517    .text:00000000000002dc .L0 
     /tmp/cc35zFKg.s:522    .text:00000000000002e4 .L0 
     /tmp/cc35zFKg.s:523    .text:00000000000002e4 .L0 
     /tmp/cc35zFKg.s:527    .text:00000000000002f4 .L0 
     /tmp/cc35zFKg.s:528    .text:00000000000002f4 .L0 
     /tmp/cc35zFKg.s:533    .text:00000000000002fc .L0 
     /tmp/cc35zFKg.s:540    .text:0000000000000308 .L0 
     /tmp/cc35zFKg.s:541    .text:0000000000000308 .L0 
     /tmp/cc35zFKg.s:544    .text:000000000000030c .L0 
     /tmp/cc35zFKg.s:546    .text:0000000000000310 .L0 
GAS LISTING /tmp/cc35zFKg.s 			page 21


     /tmp/cc35zFKg.s:547    .text:0000000000000310 .L0 
     /tmp/cc35zFKg.s:550    .text:0000000000000314 .L0 
     /tmp/cc35zFKg.s:551    .text:0000000000000314 .L0 
     /tmp/cc35zFKg.s:555    .text:0000000000000320 .L0 
     /tmp/cc35zFKg.s:556    .text:0000000000000320 .L0 
     /tmp/cc35zFKg.s:560    .text:000000000000032c .L0 
     /tmp/cc35zFKg.s:561    .text:000000000000032c .L0 
     /tmp/cc35zFKg.s:564    .text:0000000000000330 .L0 
     /tmp/cc35zFKg.s:565    .text:0000000000000334 .L0 
     /tmp/cc35zFKg.s:566    .text:0000000000000334 .L0 
     /tmp/cc35zFKg.s:568    .text:0000000000000338 .L0 
     /tmp/cc35zFKg.s:569    .text:0000000000000338 .L0 
     /tmp/cc35zFKg.s:571    .text:000000000000033c .L0 
     /tmp/cc35zFKg.s:574    .text:0000000000000340 .L0 
     /tmp/cc35zFKg.s:576    .text:0000000000000344 .L0 
     /tmp/cc35zFKg.s:580    .text:0000000000000348 .L0 
     /tmp/cc35zFKg.s:582    .text:0000000000000348 .L0 
     /tmp/cc35zFKg.s:583    .text:0000000000000348 .L0 
     /tmp/cc35zFKg.s:585    .text:0000000000000354 .L0 
     /tmp/cc35zFKg.s:599    .bss:0000000000000008 _ZN15MemoryAllocator16allocatedMemHeadE
     /tmp/cc35zFKg.s:595    .bss:0000000000000000 _ZN15MemoryAllocator11freeMemHeadE
     /tmp/cc35zFKg.s:592    .bss:0000000000000000 .LANCHOR0
     /tmp/cc35zFKg.s:607    .text:0000000000000354 .L0 
     /tmp/cc35zFKg.s:22     .text:000000000000000c .L0 
     /tmp/cc35zFKg.s:24     .text:0000000000000018 .L0 
     /tmp/cc35zFKg.s:31     .text:0000000000000028 .L0 
     /tmp/cc35zFKg.s:84     .text:0000000000000078 .L0 
     /tmp/cc35zFKg.s:160    .text:00000000000000dc .L0 
     /tmp/cc35zFKg.s:56     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc35zFKg.s:203    .text:0000000000000118 .L0 
     /tmp/cc35zFKg.s:214    .text:000000000000012c .L0 
     /tmp/cc35zFKg.s:232    .text:000000000000014c .L0 
     /tmp/cc35zFKg.s:240    .text:0000000000000158 .L0 
     /tmp/cc35zFKg.s:263    .text:0000000000000174 .L0 
     /tmp/cc35zFKg.s:307    .text:00000000000001a8 .L0 
     /tmp/cc35zFKg.s:315    .text:00000000000001b8 .L0 
     /tmp/cc35zFKg.s:327    .text:00000000000001cc .L0 
     /tmp/cc35zFKg.s:494    .text:00000000000002b4 .L0 
     /tmp/cc35zFKg.s:455    .rodata.str1.8:0000000000000030 .LC1
     /tmp/cc35zFKg.s:523    .text:00000000000002e4 .L0 
     /tmp/cc35zFKg.s:583    .text:0000000000000348 .L0 
     /tmp/cc35zFKg.s:107    .text:000000000000009c .L4
     /tmp/cc35zFKg.s:89     .text:0000000000000084 .L5
     /tmp/cc35zFKg.s:199    .text:0000000000000118 .L15
     /tmp/cc35zFKg.s:217    .text:0000000000000138 .L7
     /tmp/cc35zFKg.s:209    .text:000000000000012c .L8
     /tmp/cc35zFKg.s:236    .text:0000000000000158 .L16
     /tmp/cc35zFKg.s:165    .text:00000000000000e8 .L12
     /tmp/cc35zFKg.s:111    .text:00000000000000a0 .L6
     /tmp/cc35zFKg.s:139    .text:00000000000000c8 .L9
     /tmp/cc35zFKg.s:227    .text:0000000000000148 .L11
     /tmp/cc35zFKg.s:152    .text:00000000000000d8 .L10
     /tmp/cc35zFKg.s:176    .text:00000000000000f8 .L13
     /tmp/cc35zFKg.s:280    .text:0000000000000190 .L17
     /tmp/cc35zFKg.s:265    .text:000000000000017c .L19
     /tmp/cc35zFKg.s:356    .text:00000000000001f8 .L21
     /tmp/cc35zFKg.s:322    .text:00000000000001c8 .L28
GAS LISTING /tmp/cc35zFKg.s 			page 22


     /tmp/cc35zFKg.s:340    .text:00000000000001e4 .L24
     /tmp/cc35zFKg.s:312    .text:00000000000001b8 .L23
     /tmp/cc35zFKg.s:330    .text:00000000000001d8 .L29
     /tmp/cc35zFKg.s:439    .text:0000000000000274 .L32
     /tmp/cc35zFKg.s:445    .text:000000000000027c .L33
     /tmp/cc35zFKg.s:398    .text:000000000000022c .L39
     /tmp/cc35zFKg.s:520    .text:00000000000002e4 .L52
     /tmp/cc35zFKg.s:531    .text:00000000000002fc .L49
     /tmp/cc35zFKg.s:535    .text:0000000000000304 .L50
     /tmp/cc35zFKg.s:512    .text:00000000000002d8 .L44
     /tmp/cc35zFKg.s:502    .text:00000000000002c8 .L45
     /tmp/cc35zFKg.s:538    .text:0000000000000308 .L43
     /tmp/cc35zFKg.s:542    .text:000000000000030c .L46
     /tmp/cc35zFKg.s:562    .text:0000000000000330 .L42
     /tmp/cc35zFKg.s:579    .text:0000000000000348 .L47
     /tmp/cc35zFKg.s:548    .text:0000000000000314 .L48
     /tmp/cc35zFKg.s:1144   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc35zFKg.s:2078   .debug_str:00000000000001c5 .LASF45
     /tmp/cc35zFKg.s:2104   .debug_str:000000000000039f .LASF46
     /tmp/cc35zFKg.s:2106   .debug_str:00000000000003b7 .LASF47
     /tmp/cc35zFKg.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc35zFKg.s:602    .text:0000000000000354 .Letext0
     /tmp/cc35zFKg.s:2022   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc35zFKg.s:2084   .debug_str:00000000000002db .LASF0
     /tmp/cc35zFKg.s:2068   .debug_str:000000000000017e .LASF1
     /tmp/cc35zFKg.s:2060   .debug_str:0000000000000146 .LASF2
     /tmp/cc35zFKg.s:2040   .debug_str:000000000000008d .LASF4
     /tmp/cc35zFKg.s:2064   .debug_str:0000000000000167 .LASF3
     /tmp/cc35zFKg.s:2030   .debug_str:000000000000004b .LASF5
     /tmp/cc35zFKg.s:2026   .debug_str:0000000000000028 .LASF6
     /tmp/cc35zFKg.s:2054   .debug_str:0000000000000103 .LASF7
     /tmp/cc35zFKg.s:2096   .debug_str:000000000000033c .LASF8
     /tmp/cc35zFKg.s:2038   .debug_str:000000000000007f .LASF9
     /tmp/cc35zFKg.s:2134   .debug_str:00000000000004b2 .LASF10
     /tmp/cc35zFKg.s:2056   .debug_str:0000000000000116 .LASF11
     /tmp/cc35zFKg.s:2120   .debug_str:0000000000000458 .LASF12
     /tmp/cc35zFKg.s:2092   .debug_str:0000000000000308 .LASF13
     /tmp/cc35zFKg.s:2072   .debug_str:000000000000019b .LASF14
     /tmp/cc35zFKg.s:2048   .debug_str:00000000000000df .LASF15
     /tmp/cc35zFKg.s:2100   .debug_str:000000000000037d .LASF16
     /tmp/cc35zFKg.s:2086   .debug_str:00000000000002e8 .LASF48
     /tmp/cc35zFKg.s:2032   .debug_str:0000000000000052 .LASF17
     /tmp/cc35zFKg.s:2076   .debug_str:00000000000001b6 .LASF18
     /tmp/cc35zFKg.s:2028   .debug_str:000000000000003b .LASF49
     /tmp/cc35zFKg.s:2088   .debug_str:00000000000002f7 .LASF19
     /tmp/cc35zFKg.s:2110   .debug_str:00000000000003de .LASF20
     /tmp/cc35zFKg.s:2118   .debug_str:000000000000044e .LASF50
     /tmp/cc35zFKg.s:2082   .debug_str:00000000000002aa .LASF51
     /tmp/cc35zFKg.s:2042   .debug_str:0000000000000094 .LASF52
     /tmp/cc35zFKg.s:2098   .debug_str:000000000000034c .LASF53
     /tmp/cc35zFKg.s:2102   .debug_str:0000000000000393 .LASF27
     /tmp/cc35zFKg.s:2094   .debug_str:0000000000000318 .LASF29
     /tmp/cc35zFKg.s:2124   .debug_str:000000000000046f .LASF21
     /tmp/cc35zFKg.s:2114   .debug_str:00000000000003ff .LASF23
     /tmp/cc35zFKg.s:2108   .debug_str:00000000000003d5 .LASF22
     /tmp/cc35zFKg.s:2058   .debug_str:0000000000000125 .LASF24
     /tmp/cc35zFKg.s:2036   .debug_str:000000000000006a .LASF25
GAS LISTING /tmp/cc35zFKg.s 			page 23


     /tmp/cc35zFKg.s:2116   .debug_str:0000000000000420 .LASF26
     /tmp/cc35zFKg.s:2074   .debug_str:00000000000001a7 .LASF28
     /tmp/cc35zFKg.s:2044   .debug_str:00000000000000ac .LASF30
     /tmp/cc35zFKg.s:2070   .debug_str:0000000000000191 .LASF31
     /tmp/cc35zFKg.s:2080   .debug_str:0000000000000289 .LASF32
     /tmp/cc35zFKg.s:2090   .debug_str:0000000000000303 .LASF33
     /tmp/cc35zFKg.s:2126   .debug_str:0000000000000479 .LASF34
     /tmp/cc35zFKg.s:2024   .debug_str:0000000000000000 .LASF35
     /tmp/cc35zFKg.s:371    .text:0000000000000204 .LFB5
     /tmp/cc35zFKg.s:451    .text:0000000000000284 .LFE5
     /tmp/cc35zFKg.s:1723   .debug_loc:0000000000000000 .LLST9
     /tmp/cc35zFKg.s:425    .text:0000000000000260 .LVL40
     /tmp/cc35zFKg.s:295    .text:000000000000019c .LFB4
     /tmp/cc35zFKg.s:365    .text:0000000000000204 .LFE4
     /tmp/cc35zFKg.s:2052   .debug_str:00000000000000fe .LASF36
     /tmp/cc35zFKg.s:2066   .debug_str:0000000000000179 .LASF37
     /tmp/cc35zFKg.s:1770   .debug_loc:00000000000000b4 .LLST7
     /tmp/cc35zFKg.s:2130   .debug_str:00000000000004a1 .LASF38
     /tmp/cc35zFKg.s:1790   .debug_loc:0000000000000111 .LLST8
     /tmp/cc35zFKg.s:250    .text:0000000000000164 .LFB3
     /tmp/cc35zFKg.s:289    .text:000000000000019c .LFE3
     /tmp/cc35zFKg.s:1810   .debug_loc:000000000000016e .LLST6
     /tmp/cc35zFKg.s:462    .text:0000000000000284 .LFB2
     /tmp/cc35zFKg.s:586    .text:0000000000000354 .LFE2
     /tmp/cc35zFKg.s:1821   .debug_loc:00000000000001a4 .LLST10
     /tmp/cc35zFKg.s:2122   .debug_str:0000000000000468 .LASF39
     /tmp/cc35zFKg.s:1835   .debug_loc:00000000000001dd .LLST11
     /tmp/cc35zFKg.s:1846   .debug_loc:0000000000000213 .LLST12
     /tmp/cc35zFKg.s:481    .text:00000000000002a4 .LVL46
     /tmp/cc35zFKg.s:487    .text:00000000000002b0 .LVL48
     /tmp/cc35zFKg.s:525    .text:00000000000002f4 .LVL53
     /tmp/cc35zFKg.s:553    .text:0000000000000320 .LVL56
     /tmp/cc35zFKg.s:558    .text:000000000000032c .LVL57
     /tmp/cc35zFKg.s:63     .text:0000000000000058 .LFB1
     /tmp/cc35zFKg.s:244    .text:0000000000000164 .LFE1
     /tmp/cc35zFKg.s:2062   .debug_str:0000000000000154 .LASF40
     /tmp/cc35zFKg.s:1867   .debug_loc:0000000000000271 .LLST0
     /tmp/cc35zFKg.s:2050   .debug_str:00000000000000f5 .LASF41
     /tmp/cc35zFKg.s:1893   .debug_loc:00000000000002e3 .LLST1
     /tmp/cc35zFKg.s:1919   .debug_loc:0000000000000355 .LLST2
     /tmp/cc35zFKg.s:2112   .debug_str:00000000000003ef .LASF42
     /tmp/cc35zFKg.s:1943   .debug_loc:00000000000003c5 .LLST3
     /tmp/cc35zFKg.s:2128   .debug_str:000000000000049c .LASF43
     /tmp/cc35zFKg.s:1970   .debug_loc:0000000000000429 .LLST4
     /tmp/cc35zFKg.s:2014   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc35zFKg.s:2046   .debug_str:00000000000000d3 .LASF44
     /tmp/cc35zFKg.s:1990   .debug_loc:000000000000048d .LLST5
     /tmp/cc35zFKg.s:206    .text:0000000000000128 .LVL19
     /tmp/cc35zFKg.s:10     .text:0000000000000000 .LFB0
     /tmp/cc35zFKg.s:52     .text:0000000000000058 .LFE0
     /tmp/cc35zFKg.s:2034   .debug_str:0000000000000057 .LASF54
     /tmp/cc35zFKg.s:2132   .debug_str:00000000000004a6 .LASF55
     /tmp/cc35zFKg.s:374    .text:0000000000000204 .LVL36
     /tmp/cc35zFKg.s:394    .text:0000000000000228 .LVL37
     /tmp/cc35zFKg.s:397    .text:000000000000022c .LVL38
     /tmp/cc35zFKg.s:423    .text:0000000000000258 .LVL39
     /tmp/cc35zFKg.s:438    .text:0000000000000274 .LVL41
GAS LISTING /tmp/cc35zFKg.s 			page 24


     /tmp/cc35zFKg.s:442    .text:0000000000000278 .LVL42
     /tmp/cc35zFKg.s:444    .text:000000000000027c .LVL43
     /tmp/cc35zFKg.s:448    .text:0000000000000280 .LVL44
     /tmp/cc35zFKg.s:316    .text:00000000000001c0 .LVL29
     /tmp/cc35zFKg.s:321    .text:00000000000001c8 .LVL30
     /tmp/cc35zFKg.s:329    .text:00000000000001d8 .LVL31
     /tmp/cc35zFKg.s:347    .text:00000000000001ec .LVL33
     /tmp/cc35zFKg.s:353    .text:00000000000001f4 .LVL34
     /tmp/cc35zFKg.s:355    .text:00000000000001f8 .LVL35
     /tmp/cc35zFKg.s:253    .text:0000000000000164 .LVL25
     /tmp/cc35zFKg.s:264    .text:000000000000017c .LVL26
     /tmp/cc35zFKg.s:465    .text:0000000000000284 .LVL45
     /tmp/cc35zFKg.s:483    .text:00000000000002a8 .LVL47
     /tmp/cc35zFKg.s:572    .text:000000000000033c .LVL58
     /tmp/cc35zFKg.s:578    .text:0000000000000348 .LVL59
     /tmp/cc35zFKg.s:491    .text:00000000000002b4 .LVL49
     /tmp/cc35zFKg.s:501    .text:00000000000002c8 .LVL50
     /tmp/cc35zFKg.s:507    .text:00000000000002d0 .LVL51
     /tmp/cc35zFKg.s:519    .text:00000000000002e4 .LVL52
     /tmp/cc35zFKg.s:530    .text:00000000000002fc .LVL54
     /tmp/cc35zFKg.s:537    .text:0000000000000308 .LVL55
     /tmp/cc35zFKg.s:66     .text:0000000000000058 .LVL0
     /tmp/cc35zFKg.s:110    .text:00000000000000a0 .LVL5
     /tmp/cc35zFKg.s:191    .text:000000000000010c .LVL15
     /tmp/cc35zFKg.s:198    .text:0000000000000118 .LVL17
     /tmp/cc35zFKg.s:204    .text:0000000000000120 .LVL18
     /tmp/cc35zFKg.s:85     .text:0000000000000080 .LVL1
     /tmp/cc35zFKg.s:99     .text:0000000000000090 .LVL3
     /tmp/cc35zFKg.s:104    .text:0000000000000098 .LVL4
     /tmp/cc35zFKg.s:188    .text:0000000000000108 .LVL14
     /tmp/cc35zFKg.s:88     .text:0000000000000084 .LVL2
     /tmp/cc35zFKg.s:194    .text:0000000000000110 .LVL16
     /tmp/cc35zFKg.s:117    .text:00000000000000a8 .LVL6
     /tmp/cc35zFKg.s:148    .text:00000000000000d4 .LVL8
     /tmp/cc35zFKg.s:151    .text:00000000000000d8 .LVL9
     /tmp/cc35zFKg.s:208    .text:000000000000012c .LVL20
     /tmp/cc35zFKg.s:233    .text:0000000000000154 .LVL22
     /tmp/cc35zFKg.s:235    .text:0000000000000158 .LVL23
     /tmp/cc35zFKg.s:161    .text:00000000000000e4 .LVL10
     /tmp/cc35zFKg.s:170    .text:00000000000000f0 .LVL12
     /tmp/cc35zFKg.s:175    .text:00000000000000f8 .LVL13
     /tmp/cc35zFKg.s:241    .text:0000000000000160 .LVL24
     /tmp/cc35zFKg.s:133    .text:00000000000000c0 .LVL7
     /tmp/cc35zFKg.s:216    .text:0000000000000138 .LVL21
     /tmp/cc35zFKg.s:608    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc35zFKg.s:122    .text:00000000000000b0 .LBB3
     /tmp/cc35zFKg.s:153    .text:00000000000000d8 .LBE3
     /tmp/cc35zFKg.s:211    .text:000000000000012c .LBB4
     /tmp/cc35zFKg.s:218    .text:0000000000000138 .LBE4

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
_Z11printStringPKc
